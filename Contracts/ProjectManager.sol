// SPDX-License-Identifier: FT
pragma solidity ^0.8.0;

import "./Project.sol";
import "./Requester.sol";
import "./Interfaces/TaskAssignmentInterface.sol";

contract ProjectManager is TaskAssignmentInterface{

    address[] private projectAddresses;
    Requester private requester;
    Project[] private activeProjects;

    constructor(address requesterAddress){
        requester = Requester(requesterAddress);
    }

    function receiveProjects() public  {
        activeProjects = requester.viewActiveProjects();
    }

    function viewProjectsOnProjectManager() public view returns (Project[] memory) {
        return activeProjects;
    }

    function createTasks(address projectAddress, string memory taskName) public  {
        Project(projectAddress).createTasks(taskName);
    }

    function assignTasks(address projectAddress, string memory taskName, address assignee) public  {
        Project(projectAddress).assignTasks(taskName,assignee);
    }

    function listAssignedTaskOfAssignee(address projectAddress, address assignee) public view returns (string[] memory){
        return Project(projectAddress).listAssignedTasksOfAssignee(assignee);
    }

    function viewAllAssignments(address projectAddress) public view returns (TaskAssignment[] memory){
        return Project(projectAddress).viewAllAssignments();
    }

    function viewAllTasks(address projectAddress) public view returns (string[] memory){
        return Project(projectAddress).viewAllTasks();
    }
}